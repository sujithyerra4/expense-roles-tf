- name: ansible to install pymysql and cryptography
  ansible.builtin.pip:
    name:
    - pymysql
    - cryptography
    executable: pip3.9

- name: disable nodejs 18
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y  

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: 
  - nodejs
  - mysql

- name: creating user
  ansible.builtin.user:
    name: expense

- name: import tasks from common role
  tags:
  - deployment
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

# - name: creating directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: download the file
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: unzip the file
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: install the dependencies
  tags: 
  - deployment
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copy the backend service
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
  notify:
  - Restart backend

- name: connecting to mysql
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ password }}"
    login_host: "{{ host }}"
    target: /app/schema/backend.sql
    name: all
    state: import


# - name: reload the service
#   ansible.builtin.service:
#     daemon-reload: true
#     state: restarted
#     name: backend